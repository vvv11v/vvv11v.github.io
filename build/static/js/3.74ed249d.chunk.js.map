{"version":3,"sources":["components/ProductItem.module.css","API/ProductService.tsx","components/ProductItem.tsx","components/ProductsList.tsx"],"names":["module","exports","ProductService","group","axios","get","response","data","console","error","ProductItem","product","handleProductAddToCard","accessoryId","onClick","className","styles","list","title","price","ProductsList","useState","products","setProducts","a","getGroup","getProducts","sort","b","useEffect","fetchProducts","length","map","i","LoadingProducts"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,4B,gHCGJC,E,oIACnB,WAAsBC,GAAtB,gGAE2BC,IAAMC,IAAN,wBACJF,EADI,UAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAM,8FAAd,MAPJ,yD,sFCsBaC,EAhB2B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,YAEA,OACE,sBACEC,QAAS,kBAAMF,EAAuBD,EAASE,IAC/CE,UAAWC,IAAOC,KAFpB,UAIE,+BAAON,EAAQO,QACf,uBAAMH,UAAWC,IAAOG,MAAxB,UAAgCR,EAAQQ,MAAxC,8B,QC8BSC,UAxC6B,SAAC,GAGtC,IAFLP,EAEI,EAFJA,YACAD,EACI,EADJA,uBAEA,EAAgCS,mBAAqB,IAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KADI,4CASJ,4BAAAC,EAAA,sEAC4BtB,EAAeuB,SAASZ,GADpD,QACQa,EADR,SAGIH,EACEG,EAAYC,MAAK,SAAUH,EAAQI,GACjC,OAAOJ,EAAEL,MAAQS,EAAET,UAL3B,4CATI,sBAmBJ,OAhBAU,qBAAU,WAER,OALE,mCAIFC,GACO,eAEN,IAaD,8BACGR,EAASS,OACRT,EAASU,KAAI,SAACrB,EAASsB,GAAV,OACX,cAAC,EAAD,CAEEpB,YAAaA,EACbF,QAASA,EACTC,uBAAwBA,GAHnBqB,MAOT,cAACC,EAAA,EAAD","file":"static/js/3.74ed249d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ProductItem_list__1NPCr\"};","import axios from 'axios'\r\n\r\nimport { IProduct } from '../types/types'\r\n\r\nexport default class ProductService {\r\n  static async getGroup(group: number) {\r\n    try {\r\n      const response = await axios.get<IProduct[]>(\r\n        `data/products_${group}.json`\r\n      )\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Загрузка товаров', error)\r\n    }\r\n  }\r\n}\r\n","import React, { FC } from 'react'\r\n\r\nimport { IProduct } from '../types/types'\r\nimport styles from './ProductItem.module.css'\r\n\r\ninterface ProductItemProps {\r\n  product: IProduct\r\n  accessoryId: number\r\n  handleProductAddToCard: (item: IProduct, accessoryId: number) => void\r\n}\r\n\r\nconst ProductItem: FC<ProductItemProps> = ({\r\n  product,\r\n  handleProductAddToCard,\r\n  accessoryId,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={() => handleProductAddToCard(product, accessoryId)}\r\n      className={styles.list}\r\n    >\r\n      <span>{product.title}</span>\r\n      <span className={styles.price}>{product.price} руб.</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductItem\r\n","import React, { FC, useEffect, useState } from 'react'\r\n\r\nimport ProductService from '../API/ProductService'\r\nimport { IProduct } from '../types/types'\r\nimport ProductItem from './ProductItem'\r\nimport LoadingProducts from './UI/Loading/LoadingProducts'\r\n\r\ninterface ProductsListProps {\r\n  accessoryId: number\r\n  handleProductAddToCard: (item: IProduct, accessoryId: number) => void\r\n}\r\n\r\nconst ProductsList: FC<ProductsListProps> = ({\r\n  accessoryId,\r\n  handleProductAddToCard,\r\n}) => {\r\n  const [products, setProducts] = useState<IProduct[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchProducts()\r\n    return () => {}\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  async function fetchProducts() {\r\n    const getProducts = await ProductService.getGroup(accessoryId)\r\n    getProducts &&\r\n      setProducts(\r\n        getProducts.sort(function (a: any, b: any) {\r\n          return a.price - b.price\r\n        })\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {products.length ? (\r\n        products.map((product, i) => (\r\n          <ProductItem\r\n            key={i}\r\n            accessoryId={accessoryId}\r\n            product={product}\r\n            handleProductAddToCard={handleProductAddToCard}\r\n          />\r\n        ))\r\n      ) : (\r\n        <LoadingProducts />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsList\r\n"],"sourceRoot":""}