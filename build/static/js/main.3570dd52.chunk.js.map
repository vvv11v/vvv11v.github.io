{"version":3,"sources":["components/UI/modals/Modal.module.css","components/css/AccessoryItem.module.css","components/UI/Loading/LoadingProducts.tsx","components/css/AccessoriesList.module.css","components/CardList.tsx","API/CategoriesService.tsx","API/AccessoriesService.tsx","context/index.tsx","components/AccessoryItem.tsx","components/AccessoriesList.tsx","components/CategoryItem.tsx","components/CategoriesList.tsx","components/UI/modals/Modal.tsx","config.tsx","App.tsx","libs/index.tsx","serviceWorkerRegistration.ts","index.tsx","components/css/CardList.module.css","App.module.css"],"names":["module","exports","LoadingProducts","CardList","products","handleProductRemoveFromCard","handleProductReplaceToCard","className","styles","list","map","item","i","card","title","price","edit","onClick","src","alt","trash","CategoriesService","axios","get","response","data","console","error","AccessoriesService","category","sort","a","b","ProductContext","createContext","AccessoryItem","accessory","useContext","shouldDisplayProducts","btn","accessoriesDisabled","has","id","hide","visible","AccessoriesList","useState","accessories","setAccessories","getGroup","getAccessories","useEffect","fetchAccessories","length","bullet","CategoryItem","CategoriesList","categories","setCategories","getAll","getCategories","fetchCategories","Modal","children","setVisible","rootClasses","productModal","push","active","join","productModalContent","e","stopPropagation","VERSION","name","version","ProductsList","React","lazy","log","CONFIG","App","isModal","setIsModal","setProducts","accessoryId","setAccessoryId","setAccessoriesDisabled","priceTotal","setPriceTotal","result","Map","p","set","getAccessoriesId","reduce","acc","num","calculatePriceTotal","Provider","value","main","button","comp","filter","fallback","handleProductAddToCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3570dd52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"productModal\":\"Modal_productModal__3xeo_\",\"productModalContent\":\"Modal_productModalContent__1Wdpf\",\"active\":\"Modal_active__2ikJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"AccessoryItem_hide__26glv\",\"visible\":\"AccessoryItem_visible__39Br9\"};","import React from 'react'\r\n\r\nconst LoadingProducts = () => {\r\n  return <div>Загрузка...</div>\r\n}\r\n\r\nexport default LoadingProducts\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bullet\":\"AccessoriesList_bullet__3UAtI\"};","import React, { FC } from 'react'\r\n\r\nimport { IProduct } from '../types/types'\r\nimport styles from './css/CardList.module.css'\r\n\r\ninterface CardListProps {\r\n  products: IProduct[]\r\n  handleProductRemoveFromCard: (item: IProduct) => void\r\n  handleProductReplaceToCard: (item: IProduct) => void\r\n}\r\n\r\nconst CardList: FC<CardListProps> = ({\r\n  products,\r\n  handleProductRemoveFromCard,\r\n  handleProductReplaceToCard,\r\n}) => {\r\n  return (\r\n    <div className={styles.list}>\r\n      {products.map((item, i) => (\r\n        <div key={i} className={styles.card}>\r\n          <div>\r\n            <div className={styles.title}>{item.title}</div>\r\n            <div className={styles.price}>Цена: {item.price} руб.</div>\r\n          </div>\r\n\r\n          <div\r\n            className={styles.edit}\r\n            onClick={() => {\r\n              handleProductReplaceToCard(item)\r\n            }}\r\n          >\r\n            <img src='/images/edit.png' alt='' />\r\n          </div>\r\n          <div\r\n            className={styles.trash}\r\n            onClick={() => {\r\n              handleProductRemoveFromCard(item)\r\n            }}\r\n          >\r\n            <img src='/images/trash.png' alt='' />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import axios from 'axios'\r\n\r\nimport { ICategory } from '../types/types'\r\n\r\nexport default class CategoriesService {\r\n  static async getAll() {\r\n    try {\r\n      const response = await axios.get<ICategory[]>(\r\n        'data/categories/categories.json'\r\n      )\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Загрузка категорий', error)\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport { IAccessory } from '../types/types'\r\n\r\nexport default class AccessoriesService {\r\n  static async getGroup(category: number) {\r\n    try {\r\n      const response = await axios.get<IAccessory[]>(\r\n        `data/categories/accessories_${category}.json`\r\n      )\r\n      return response.data.sort(function (a, b) {\r\n        return a.sort - b.sort\r\n      })\r\n    } catch (error) {\r\n      console.error('Загрузка Групп товаров', error)\r\n    }\r\n  }\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const ProductContext = createContext<any>(null)\r\n","import React, { FC, useContext } from 'react'\r\n\r\nimport { ProductContext } from '../context'\r\nimport { IAccessory } from '../types/types'\r\nimport styles from './css/AccessoryItem.module.css'\r\n\r\ninterface AccessoryItemProps {\r\n  accessory: IAccessory\r\n}\r\n\r\nconst AccessoryItem: FC<AccessoryItemProps> = ({ accessory }) => {\r\n  const { shouldDisplayProducts, accessoriesDisabled } =\r\n    useContext(ProductContext)\r\n  const btn = accessoriesDisabled.has(accessory.id)\r\n    ? styles.hide\r\n    : styles.visible\r\n\r\n  return (\r\n    <li\r\n      className={btn}\r\n      onClick={() => {\r\n        shouldDisplayProducts(accessory.id)\r\n      }}\r\n    >\r\n      {accessory.title}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AccessoryItem\r\n","import React, { FC, useEffect, useState } from 'react'\r\n\r\nimport AccessoriesService from '../API/AccessoriesService'\r\nimport { IAccessory, ICategory } from '../types/types'\r\nimport AccessoryItem from './AccessoryItem'\r\nimport styles from './css/AccessoriesList.module.css'\r\n\r\ninterface AccessoriesListProps {\r\n  category: ICategory\r\n}\r\n\r\nconst AccessoriesList: FC<AccessoriesListProps> = ({ category }) => {\r\n  const [accessories, setAccessories] = useState<IAccessory[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchAccessories()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  async function fetchAccessories() {\r\n    const getAccessories = await AccessoriesService.getGroup(category.id)\r\n    getAccessories && setAccessories(getAccessories)\r\n  }\r\n  if (accessories.length) {\r\n    return (\r\n      <>\r\n        <h2>{category.title}</h2>\r\n        <ol className={styles.bullet}>\r\n          {accessories.map((accessory) => (\r\n            <AccessoryItem key={accessory.id} accessory={accessory} />\r\n          ))}\r\n        </ol>\r\n      </>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default AccessoriesList\r\n","import React, { FC } from 'react'\r\n\r\nimport { ICategory } from '../types/types'\r\nimport AccessoriesList from './AccessoriesList'\r\n\r\ninterface CategoryItemProps {\r\n  category: ICategory\r\n}\r\n\r\nconst CategoryItem: FC<CategoryItemProps> = ({ category }) => {\r\n  return <AccessoriesList category={category} />\r\n}\r\nexport default CategoryItem\r\n","import React, { FC, useEffect, useState } from 'react'\r\n\r\nimport CategoriesService from '../API/CategoriesService'\r\nimport { ICategory } from '../types/types'\r\nimport CategoryItem from './CategoryItem'\r\n\r\nconst CategoriesList: FC = () => {\r\n  const [categories, setCategories] = useState<ICategory[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchCategories()\r\n  }, [])\r\n\r\n  async function fetchCategories() {\r\n    const getCategories = await CategoriesService.getAll()\r\n    getCategories && setCategories(getCategories)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {categories.map((category) => (\r\n        <CategoryItem key={category.id} category={category} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesList\r\n","import React, { FC } from 'react'\r\n\r\nimport styles from './Modal.module.css'\r\n\r\ninterface ModalProps {\r\n  visible: boolean\r\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({ children, visible, setVisible }) => {\r\n  const rootClasses = [styles.productModal]\r\n\r\n  if (visible) {\r\n    rootClasses.push(styles.active)\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n      <div\r\n        className={styles.productModalContent}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import { name, version } from '../package.json'\r\n\r\nexport const VERSION: string = `App \"${name}\" version : ${version}`\r\n\r\nconst DEBUG: boolean = process.env.NODE_ENV === 'development' ? true : false\r\n\r\nexport const report = (text: string, prop: any = ''): void => {\r\n  DEBUG && console.log(text, prop)\r\n}\r\n\r\nexport const PREFIX: string =\r\n  process.env.NODE_ENV === 'development' ? 'http://komp.local' : ''\r\n","import React, { Suspense, useEffect, useState } from 'react'\n\nimport styles from './App.module.css'\nimport CardList from './components/CardList'\nimport CategoriesList from './components/CategoriesList'\nimport LoadingProducts from './components/UI/Loading/LoadingProducts'\nimport Modal from './components/UI/modals/Modal'\nimport * as CONFIG from './config'\nimport { ProductContext } from './context'\nimport { calculatePriceTotal, getAccessoriesId } from './libs'\nimport { IProduct } from './types/types'\n\nconst ProductsList = React.lazy(() => import('./components/ProductsList'))\n\nconsole.log(CONFIG.VERSION)\n\nfunction App() {\n  const [isModal, setIsModal] = useState<boolean>(false)\n  const [products, setProducts] = useState<IProduct[]>([])\n  const [accessoryId, setAccessoryId] = useState<number>(0)\n  const [accessoriesDisabled, setAccessoriesDisabled] = useState<[]>([])\n  const [priceTotal, setPriceTotal] = useState<number>(0)\n\n  useEffect(() => {\n    setAccessoriesDisabled(getAccessoriesId(products))\n    setPriceTotal(calculatePriceTotal(products))\n  }, [products])\n\n  function shouldDisplayProducts(accessoryId: number): void {\n    setAccessoryId(accessoryId)\n    setIsModal(true)\n  }\n\n  function handleProductAddToCard(item: IProduct, accessoryId: number): void {\n    item.accessory = accessoryId\n    setProducts([...products, item])\n    setIsModal(false)\n  }\n\n  function handleProductRemoveFromCard(item: IProduct): void {\n    setProducts(products.filter((p) => p.title !== item.title))\n  }\n\n  function handleProductReplaceToCard(item: IProduct): void {\n    setProducts(products.filter((p) => p.title !== item.title))\n    setAccessoryId(item.accessory)\n    setIsModal(true)\n  }\n\n  return (\n    <ProductContext.Provider\n      value={{\n        shouldDisplayProducts,\n        accessoriesDisabled,\n      }}\n    >\n      <main className={styles.main}>\n        <div className={styles.list}>\n          <h1>Конфигуратор ПК</h1>\n          <CategoriesList />\n          {products.length !== 0 && (\n            <button\n              className={styles.button}\n              onClick={() => {\n                setProducts([])\n              }}\n            >\n              Сбросить результаты ...\n            </button>\n          )}\n        </div>\n        <div className={styles.comp}>\n          <CardList\n            products={products}\n            handleProductRemoveFromCard={handleProductRemoveFromCard}\n            handleProductReplaceToCard={handleProductReplaceToCard}\n          />\n          {priceTotal !== 0 && (\n            <h2 className={styles.price}>\n              Цена: <span>{priceTotal}</span> руб.\n            </h2>\n          )}\n        </div>\n      </main>\n      <Modal visible={isModal} setVisible={setIsModal}>\n        {isModal && (\n          <Suspense fallback={<LoadingProducts />}>\n            <ProductsList\n              accessoryId={accessoryId}\n              handleProductAddToCard={handleProductAddToCard}\n            />\n          </Suspense>\n        )}\n      </Modal>\n    </ProductContext.Provider>\n  )\n}\n\nexport default App\n","import { IProduct } from '../types/types'\r\n\r\nexport function getAccessoriesId(products: IProduct[]): [] {\r\n  const result: any = new Map()\r\n  products.map((p) => result.set(p.accessory, true))\r\n  return result\r\n}\r\n\r\nexport function calculatePriceTotal(products: IProduct[]): number {\r\n  const result: number[] = []\r\n  products.map((p) => result.push(p.price))\r\n  return result.reduce((acc, num) => acc + num, 0)\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CardList_list__3hJQ5\",\"card\":\"CardList_card__1eJ8m\",\"img\":\"CardList_img__1FdaX\",\"title\":\"CardList_title__2nzHy\",\"description\":\"CardList_description__1oG4_\",\"price\":\"CardList_price__2nJFP\",\"edit\":\"CardList_edit__2R4Qq\",\"trash\":\"CardList_trash__3BJKx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__25myP\",\"list\":\"App_list__36ru9\",\"comp\":\"App_comp__2UxlX\",\"button\":\"App_button__2k423\",\"price\":\"App_price__2i7Ks\"};"],"sourceRoot":""}