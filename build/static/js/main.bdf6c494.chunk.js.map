{"version":3,"sources":["components/UI/modals/Modal.module.css","components/css/AccessoryItem.module.css","components/UI/Loading/LoadingProducts.tsx","components/css/AccessoriesList.module.css","components/CardList.module.css","components/CardList.tsx","API/CategoriesService.tsx","API/AccessoriesService.tsx","context/index.tsx","components/AccessoryItem.tsx","components/AccessoriesList.tsx","components/CategoryItem.tsx","components/CategoriesList.tsx","components/UI/modals/Modal.tsx","config.tsx","App.tsx","libs/index.tsx","serviceWorkerRegistration.ts","index.tsx","App.module.css"],"names":["module","exports","LoadingProducts","CardList","products","handleProductRemoveFromCard","handleProductReplaceToCard","countProduct","className","styles","list","map","item","i","card","title","price","col","input","type","min","defaultValue","onChange","e","Number","target","value","newPrice","but","edit","onClick","src","alt","trash","CategoriesService","axios","get","response","data","console","error","AccessoriesService","category","sort","a","b","ProductContext","createContext","AccessoryItem","accessory","useContext","shouldDisplayProducts","btn","accessoriesDisabled","has","id","hide","visible","AccessoriesList","useState","accessories","setAccessories","getGroup","getAccessories","useEffect","fetchAccessories","length","bullet","CategoryItem","CategoriesList","categories","setCategories","getAll","getCategories","fetchCategories","Modal","children","setVisible","rootClasses","productModal","push","active","join","productModalContent","stopPropagation","VERSION","name","version","ProductsList","React","lazy","log","CONFIG","App","isModal","setIsModal","setProducts","accessoryId","setAccessoryId","setAccessoriesDisabled","priceTotal","setPriceTotal","kof","setKof","sortCard","result","Map","p","set","getAccessoriesId","reduce","acc","num","calculatePriceTotal","Provider","main","button","comp","filter","product","newProducts","fallback","handleProductAddToCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.bdf6c494.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"productModal\":\"Modal_productModal__HzbGo\",\"productModalContent\":\"Modal_productModalContent__Xslh-\",\"active\":\"Modal_active__1CIe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"AccessoryItem_hide__19o0C\",\"visible\":\"AccessoryItem_visible__1cwGG\"};","import React from 'react'\r\n\r\nconst LoadingProducts = () => {\r\n  return <div>Загрузка...</div>\r\n}\r\n\r\nexport default LoadingProducts\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bullet\":\"AccessoriesList_bullet__2R6_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"CardList_list__1c-6D\",\"card\":\"CardList_card__1KuoJ\",\"img\":\"CardList_img__RfA7u\",\"title\":\"CardList_title__D_Dfn\",\"description\":\"CardList_description__3n7pL\",\"price\":\"CardList_price__3SOQ0\",\"edit\":\"CardList_edit__2PXcP\",\"trash\":\"CardList_trash__1sVok\",\"col\":\"CardList_col__3LYQT\",\"input\":\"CardList_input__b0v-F\",\"but\":\"CardList_but__nw825\"};","import { IProduct } from '../types/types'\r\nimport styles from './CardList.module.css'\r\n\r\ninterface CardListProps {\r\n  products: IProduct[]\r\n  handleProductRemoveFromCard: (item: IProduct) => void\r\n  handleProductReplaceToCard: (item: IProduct) => void\r\n  countProduct: (num: number, item: IProduct) => void\r\n}\r\n\r\nconst CardList = ({\r\n  products,\r\n  handleProductRemoveFromCard,\r\n  handleProductReplaceToCard,\r\n  countProduct,\r\n}: CardListProps) => {\r\n  return (\r\n    <div className={styles.list}>\r\n      {products.map((item, i) => (\r\n        <div key={i} className={styles.card}>\r\n          <div>\r\n            <div className={styles.title}>{item.title}</div>\r\n            <div className={styles.price}>\r\n              <div className={styles.col}>\r\n                <input\r\n                  className={styles.input}\r\n                  type='number'\r\n                  min='1'\r\n                  defaultValue='1'\r\n                  onChange={(e) => {\r\n                    countProduct(Number(e.target.value), item)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div>\r\n                Цена: {item.price}{' '}\r\n                {item.newPrice && item.newPrice !== item.price && (\r\n                  <span>/ {item.newPrice}</span>\r\n                )}{' '}\r\n                руб.\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.but}>\r\n            <div\r\n              className={styles.edit}\r\n              onClick={() => {\r\n                handleProductReplaceToCard(item)\r\n              }}\r\n            >\r\n              <img src='./images/edit.png' alt='' />\r\n            </div>\r\n            <div\r\n              className={styles.trash}\r\n              onClick={() => {\r\n                handleProductRemoveFromCard(item)\r\n              }}\r\n            >\r\n              <img src='./images/trash.png' alt='' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import axios from 'axios'\r\n\r\nimport { ICategory } from '../types/types'\r\n\r\nexport default class CategoriesService {\r\n  static async getAll() {\r\n    try {\r\n      const response = await axios.get<ICategory[]>(\r\n        'data/categories/categories.json'\r\n      )\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Загрузка категорий', error)\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nimport { IAccessory } from '../types/types'\r\n\r\nexport default class AccessoriesService {\r\n  static async getGroup(category: number) {\r\n    try {\r\n      const response = await axios.get<IAccessory[]>(\r\n        `data/categories/accessories_${category}.json`\r\n      )\r\n      return response.data.sort(function (a, b) {\r\n        return a.sort - b.sort\r\n      })\r\n    } catch (error) {\r\n      console.error('Загрузка Групп товаров', error)\r\n    }\r\n  }\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const ProductContext = createContext<any>(null)\r\n","import React, { FC, useContext } from 'react'\r\n\r\nimport { ProductContext } from '../context'\r\nimport { IAccessory } from '../types/types'\r\nimport styles from './css/AccessoryItem.module.css'\r\n\r\ninterface AccessoryItemProps {\r\n  accessory: IAccessory\r\n}\r\n\r\nconst AccessoryItem: FC<AccessoryItemProps> = ({ accessory }) => {\r\n  const { shouldDisplayProducts, accessoriesDisabled } =\r\n    useContext(ProductContext)\r\n  const btn = accessoriesDisabled.has(accessory.id)\r\n    ? styles.hide\r\n    : styles.visible\r\n\r\n  return (\r\n    <li\r\n      className={btn}\r\n      onClick={() => {\r\n        shouldDisplayProducts(accessory.id)\r\n      }}\r\n    >\r\n      {accessory.title}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default AccessoryItem\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport AccessoriesService from '../API/AccessoriesService'\r\nimport { IAccessory, ICategory } from '../types/types'\r\nimport AccessoryItem from './AccessoryItem'\r\nimport styles from './css/AccessoriesList.module.css'\r\n\r\ninterface AccessoriesListProps {\r\n  category: ICategory\r\n}\r\n\r\nconst AccessoriesList = ({ category }: AccessoriesListProps) => {\r\n  const [accessories, setAccessories] = useState<IAccessory[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchAccessories()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  async function fetchAccessories() {\r\n    const getAccessories = await AccessoriesService.getGroup(category.id)\r\n    getAccessories && setAccessories(getAccessories)\r\n  }\r\n  if (accessories.length) {\r\n    return (\r\n      <>\r\n        <h2>{category.title}</h2>\r\n        <ol className={styles.bullet}>\r\n          {accessories.map((accessory) => (\r\n            <AccessoryItem key={accessory.id} accessory={accessory} />\r\n          ))}\r\n        </ol>\r\n      </>\r\n    )\r\n  } else {\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default AccessoriesList\r\n","import React, { FC } from 'react'\r\n\r\nimport { ICategory } from '../types/types'\r\nimport AccessoriesList from './AccessoriesList'\r\n\r\ninterface CategoryItemProps {\r\n  category: ICategory\r\n}\r\n\r\nconst CategoryItem: FC<CategoryItemProps> = ({ category }) => {\r\n  return <AccessoriesList category={category} />\r\n}\r\nexport default CategoryItem\r\n","import React, { FC, useEffect, useState } from 'react'\r\n\r\nimport CategoriesService from '../API/CategoriesService'\r\nimport { ICategory } from '../types/types'\r\nimport CategoryItem from './CategoryItem'\r\n\r\nconst CategoriesList: FC = () => {\r\n  const [categories, setCategories] = useState<ICategory[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchCategories()\r\n  }, [])\r\n\r\n  async function fetchCategories() {\r\n    const getCategories = await CategoriesService.getAll()\r\n    getCategories && setCategories(getCategories)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {categories.map((category) => (\r\n        <CategoryItem key={category.id} category={category} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoriesList\r\n","import React, { FC } from 'react'\r\n\r\nimport styles from './Modal.module.css'\r\n\r\ninterface ModalProps {\r\n  visible: boolean\r\n  setVisible: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst Modal: FC<ModalProps> = ({ children, visible, setVisible }) => {\r\n  const rootClasses = [styles.productModal]\r\n\r\n  if (visible) {\r\n    rootClasses.push(styles.active)\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n      <div\r\n        className={styles.productModalContent}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import { name, version } from '../package.json'\r\n\r\nexport const VERSION: string = `App \"${name}\" version : ${version}`\r\n\r\nconst DEBUG: boolean = process.env.NODE_ENV === 'development' ? true : false\r\n\r\nexport const report = (text: string, prop: any = ''): void => {\r\n  DEBUG && console.log(text, prop)\r\n}\r\n\r\nexport const PREFIX: string =\r\n  process.env.NODE_ENV === 'development' ? 'http://komp.local' : ''\r\n","import React, { Suspense, useEffect, useState } from 'react'\r\n\r\nimport styles from './App.module.css'\r\nimport CardList from './components/CardList'\r\nimport CategoriesList from './components/CategoriesList'\r\nimport LoadingProducts from './components/UI/Loading/LoadingProducts'\r\nimport Modal from './components/UI/modals/Modal'\r\nimport * as CONFIG from './config'\r\nimport { ProductContext } from './context'\r\nimport { calculatePriceTotal, getAccessoriesId } from './libs'\r\nimport { IProduct } from './types/types'\r\n\r\nconst ProductsList = React.lazy(() => import('./components/ProductsList'))\r\n\r\nconsole.log(CONFIG.VERSION)\r\n\r\nfunction App() {\r\n  const [isModal, setIsModal] = useState<boolean>(false)\r\n  const [products, setProducts] = useState<IProduct[]>([])\r\n  const [accessoryId, setAccessoryId] = useState<number>(0)\r\n  const [accessoriesDisabled, setAccessoriesDisabled] = useState<[]>([])\r\n  const [priceTotal, setPriceTotal] = useState<number>(0)\r\n  const [kof, setKof] = useState(1.05)\r\n\r\n  useEffect(() => {\r\n    setAccessoriesDisabled(getAccessoriesId(products))\r\n    setPriceTotal(calculatePriceTotal(products))\r\n  }, [products])\r\n\r\n  function shouldDisplayProducts(accessoryId: number): void {\r\n    setAccessoryId(accessoryId)\r\n    setIsModal(true)\r\n  }\r\n\r\n  function handleProductAddToCard(item: IProduct, accessoryId: number): void {\r\n    item.accessory = accessoryId\r\n    setProducts([...products, item].sort(sortCard))\r\n    setIsModal(false)\r\n  }\r\n\r\n  function handleProductRemoveFromCard(item: IProduct): void {\r\n    setProducts(products.filter((p) => p.title !== item.title).sort(sortCard))\r\n  }\r\n\r\n  function handleProductReplaceToCard(item: IProduct): void {\r\n    setProducts(products.filter((p) => p.title !== item.title).sort(sortCard))\r\n    setAccessoryId(item.accessory)\r\n    setIsModal(true)\r\n  }\r\n\r\n  function countProduct(num: number, product: IProduct) {\r\n    const newPrice = num * product.price\r\n    product.newPrice = newPrice\r\n    const newProducts = products.filter((item) => item.title !== product.title)\r\n\r\n    setProducts([...newProducts, product].sort(sortCard))\r\n  }\r\n\r\n  function sortCard(a: any, b: any) {\r\n    if (a.title < b.title) return -1\r\n    else return 1\r\n  }\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        shouldDisplayProducts,\r\n        accessoriesDisabled,\r\n      }}\r\n    >\r\n      <main className={styles.main}>\r\n        <div className={styles.list}>\r\n          <h1>Конфигуратор ПК</h1>\r\n          <CategoriesList />\r\n          {products.length !== 0 && (\r\n            <button\r\n              className={styles.button}\r\n              onClick={() => {\r\n                setProducts([])\r\n              }}\r\n            >\r\n              Сбросить результаты ...\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className={styles.comp}>\r\n          <CardList\r\n            products={products}\r\n            handleProductRemoveFromCard={handleProductRemoveFromCard}\r\n            handleProductReplaceToCard={handleProductReplaceToCard}\r\n            countProduct={countProduct}\r\n          />\r\n          {priceTotal !== 0 && (\r\n            <h2 className={styles.price}>\r\n              <span>\r\n                Цена: <span>{priceTotal * kof}</span> руб.\r\n              </span>\r\n              <span className={styles.kof}>\r\n                <input\r\n                  value={kof}\r\n                  type='number'\r\n                  onChange={(e) => {\r\n                    setKof(Number(e.target.value))\r\n                  }}\r\n                />\r\n              </span>\r\n            </h2>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <Modal visible={isModal} setVisible={setIsModal}>\r\n        {isModal && (\r\n          <Suspense fallback={<LoadingProducts />}>\r\n            <ProductsList\r\n              accessoryId={accessoryId}\r\n              handleProductAddToCard={handleProductAddToCard}\r\n            />\r\n          </Suspense>\r\n        )}\r\n      </Modal>\r\n    </ProductContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { IProduct } from '../types/types'\r\n\r\nexport function getAccessoriesId(products: IProduct[]): [] {\r\n  const result: any = new Map()\r\n  products.map((p) => result.set(p.accessory, true))\r\n  return result\r\n}\r\n\r\nexport function calculatePriceTotal(products: IProduct[]): number {\r\n  const result: number[] = []\r\n  products.map((p: IProduct) =>\r\n    p.newPrice ? result.push(p.newPrice) : result.push(p.price)\r\n  )\r\n  return result.reduce((acc, num) => acc + num, 0)\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3tFAh\",\"list\":\"App_list__qpZfw\",\"comp\":\"App_comp__27pL3\",\"button\":\"App_button__v-Aoc\",\"price\":\"App_price__1OLPd\",\"kof\":\"App_kof__jXP-H\"};"],"sourceRoot":""}