{"version":3,"sources":["API/ProductService.tsx","components/ProductItem.tsx","components/ProductsList.tsx"],"names":["ProductService","group","axios","get","response","data","console","error","ProductItem","product","handleProductAddToCard","accessoryId","onClick","style","cursor","padding","borderBottom","title","color","paddingLeft","price","ProductsList","useState","products","setProducts","a","getGroup","getProducts","useEffect","fetchProducts","length","map","i","LoadingProducts"],"mappings":"6MAIqBA,E,oIACnB,WAAsBC,GAAtB,gGAE2BC,IAAMC,IAAN,wBACJF,EADI,UAF3B,cAEUG,EAFV,yBAKWA,EAASC,MALpB,gCAOIC,QAAQC,MAAM,8FAAd,MAPJ,yD,qECyBaC,EApB2B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,YAEA,OACE,qBACEC,QAAS,kBAAMF,EAAuBD,EAASE,IAC/CE,MAAO,CAAEC,OAAQ,UAAWC,QAAS,QAFvC,SAIE,sBAAKF,MAAO,CAAEG,aAAc,wBAA5B,UACGP,EAAQQ,MACT,uBAAMJ,MAAO,CAAEK,MAAO,OAAQC,YAAa,QAA3C,UACGV,EAAQW,MADX,gC,QCwBOC,UAlC6B,SAAC,GAGtC,IAFLV,EAEI,EAFJA,YACAD,EACI,EADJA,uBAEA,EAAgCY,mBAAqB,IAArD,mBAAOC,EAAP,KAAiBC,EAAjB,KADI,4CASJ,4BAAAC,EAAA,sEAC4BzB,EAAe0B,SAASf,GADpD,QACQgB,EADR,SAEiBH,EAAYG,GAF7B,4CATI,sBAaJ,OAVAC,qBAAU,WAER,OALE,mCAIFC,GACO,eAEN,IAOD,8BACGN,EAASO,OACRP,EAASQ,KAAI,SAACtB,EAASuB,GAAV,OACX,cAAC,EAAD,CAEErB,YAAaA,EACbF,QAASA,EACTC,uBAAwBA,GAHnBsB,MAOT,cAACC,EAAA,EAAD","file":"static/js/3.0bdb4980.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nimport { IProduct } from '../types/types'\r\n\r\nexport default class ProductService {\r\n  static async getGroup(group: number) {\r\n    try {\r\n      const response = await axios.get<IProduct[]>(\r\n        `data/products_${group}.json`\r\n      )\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Загрузка товаров', error)\r\n    }\r\n  }\r\n}\r\n","import React, { FC } from 'react'\r\n\r\nimport { IProduct } from '../types/types'\r\n\r\ninterface ProductItemProps {\r\n  product: IProduct\r\n  accessoryId: number\r\n  handleProductAddToCard: (item: IProduct, accessoryId: number) => void\r\n}\r\n\r\nconst ProductItem: FC<ProductItemProps> = ({\r\n  product,\r\n  handleProductAddToCard,\r\n  accessoryId,\r\n}) => {\r\n  return (\r\n    <div\r\n      onClick={() => handleProductAddToCard(product, accessoryId)}\r\n      style={{ cursor: 'pointer', padding: '10px' }}\r\n    >\r\n      <div style={{ borderBottom: '1px solid blueviolet' }}>\r\n        {product.title}\r\n        <span style={{ color: 'grey', paddingLeft: '20px' }}>\r\n          {product.price} руб.\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductItem\r\n","import React, { FC, useEffect, useState } from 'react'\r\n\r\nimport ProductService from '../API/ProductService'\r\nimport { IProduct } from '../types/types'\r\nimport ProductItem from './ProductItem'\r\nimport LoadingProducts from './UI/Loading/LoadingProducts'\r\n\r\ninterface ProductsListProps {\r\n  accessoryId: number\r\n  handleProductAddToCard: (item: IProduct, accessoryId: number) => void\r\n}\r\n\r\nconst ProductsList: FC<ProductsListProps> = ({\r\n  accessoryId,\r\n  handleProductAddToCard,\r\n}) => {\r\n  const [products, setProducts] = useState<IProduct[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchProducts()\r\n    return () => {}\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  async function fetchProducts() {\r\n    const getProducts = await ProductService.getGroup(accessoryId)\r\n    getProducts && setProducts(getProducts)\r\n  }\r\n  return (\r\n    <div>\r\n      {products.length ? (\r\n        products.map((product, i) => (\r\n          <ProductItem\r\n            key={i}\r\n            accessoryId={accessoryId}\r\n            product={product}\r\n            handleProductAddToCard={handleProductAddToCard}\r\n          />\r\n        ))\r\n      ) : (\r\n        <LoadingProducts />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductsList\r\n"],"sourceRoot":""}